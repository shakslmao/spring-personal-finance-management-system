spring:
    datasource:
        url: jdbc:postgresql://localhost:5432/paymentdb
        username: ${POSTGRES_USER}
        password: ${POSTGRES_PASSWORD}
        driver-class-name: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: update
        database: postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        show-sql: true

    kafka:
        producer:
            bootstrap-servers: localhost:9092
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
            properties:
                spring.json.type.mapping.com.devshaks.personal_finance.kafka.data.PaymentTransactionEventDTO: com.devshaks.personal_finance.kafka.data.PaymentTransactionEventDTO

        consumer:
            bootstrap-servers: localhost:9092
            group-id: paymentGroup
            auto-offset-reset: earliest
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            properties:
                spring.json.trusted.packages: "*"
                spring.json.type.mapping.com.devshaks.personal_finance.kafka.data.PaymentTransactionEventDTO: com.devshaks.personal_finance.kafka.data.PaymentTransactionEventDTO

application:
    config:
        transaction-service-url: http://localhost:8222/api/v1/transactions
        STRIPE_API_SECRET_KEY: ${STRIPE_API_SECRET_KEY}
        STRIPE_API_PUBLISHABLE_KEY: ${STRIPE_API_PUBLISHABLE_KEY}

server:
    port: 8070
