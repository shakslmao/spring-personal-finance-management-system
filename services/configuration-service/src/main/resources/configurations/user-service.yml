spring:
    datasource:
        url: jdbc:postgresql://localhost:5432/userdb
        username: ${POSTGRES_USER}
        password: ${POSTGRES_PASSWORD}
        driver-class-name: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: update
        database: postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        show-sql: true

    kafka:
        producer:
            bootstrap-servers: localhost:9092
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
            properties:
                spring.json.type.mapping.com.devshaks.personal_finance.kafka.data.AuditUserEventDTO: com.devshaks.personal_finance.kafka.data.AuditUserEventDTO

        consumer:
            bootstrap-servers: localhost:9092
            group-id: userGroup
            auto-offset-reset: earliest
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            properties:
                spring.json.trusted.packages: "*"
                spring.json.type.mapping.com.devshaks.personal_finance.kafka.data.UserTransactionEventDTO: com.devshaks.personal_finance.kafka.data.UserTransactionEventDTO
application:
    security:
        jwt:
            secret-key: ${JWT_SECRET}
            expiration: ${JWT_EXPIRATION}

server:
    port: 8090

logging:
    level:
        org:
            hibernate:
                SQL: DEBUG
#eureka:
#   client:
#        serviceUrl:
#            defaultZone: http://discovery-service:8761/eureka/ # Use Docker container name
#    instance:
#        hostname: user-service
#        preferIpAddress: false # Use hostname for Eureka registration
